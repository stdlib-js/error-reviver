{"version":3,"file":"index.mjs","sources":["../lib/ctors.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar CTORS = {\n\t'Error': Error,\n\t'TypeError': TypeError,\n\t'SyntaxError': SyntaxError,\n\t'ReferenceError': ReferenceError,\n\t'URIError': URIError,\n\t'EvalError': EvalError,\n\t'RangeError': RangeError\n};\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils-keys' ;\nimport { isPrimitive as isString } from '@stdlib/assert-is-string' ;\nimport ctors from './ctors.js' ;\n\n\n// MAIN //\n\n/**\n* Revives a JSON-serialized error object.\n*\n* @param {string} key - key\n* @param {*} value - value\n* @returns {(*|Error|SyntaxError|URIError|EvalError|ReferenceError|RangeError|TypeError)} value or error object\n*\n* @example\n* import parseJSON from '@stdlib/utils-parse-json' ;\n*\n* var str = '{\"type\":\"TypeError\",\"message\":\"beep\"}';\n* var err = parseJSON( str, reviveError );\n* // returns <TypeError>\n*/\nfunction reviveError( key, value ) {\n\tvar hasStack;\n\tvar ctor;\n\tvar keys;\n\tvar err;\n\tvar k;\n\tvar i;\n\tif (\n\t\tvalue &&\n\t\tvalue.type &&\n\t\tisString( value.message )\n\t) {\n\t\tctor = ctors[ value.type ];\n\t\tif ( ctor ) {\n\t\t\terr = new ctor( value.message );\n\t\t\tkeys = objectKeys( value );\n\t\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t\tk = keys[ i ];\n\t\t\t\tif (\n\t\t\t\t\tk === 'type' ||\n\t\t\t\t\tk === 'message' ||\n\t\t\t\t\tk === 'name' // read-only for built-ins\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif ( k === 'stack' ) {\n\t\t\t\t\tif ( !isString( value[k] ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\thasStack = true;\n\t\t\t\t}\n\t\t\t\terr[ k ] = value[ k ];\n\t\t\t}\n\t\t\tif ( !hasStack && isString( err.stack ) ) {\n\t\t\t\terr.stack = '';\n\t\t\t}\n\t\t\treturn err;\n\t\t}\n\t}\n\treturn value;\n}\n\n\n// EXPORTS //\n\nexport default reviveError;\n"],"names":["CTORS","Error","TypeError","SyntaxError","ReferenceError","URIError","EvalError","RangeError","reviveError","key","value","hasStack","ctor","keys","err","k","i","type","isString","message","ctors","objectKeys","length","stack"],"mappings":";;iLAsBA,IAAIA,EAAQ,CACXC,MAASA,MACTC,UAAaA,UACbC,YAAeA,YACfC,eAAkBA,eAClBC,SAAYA,SACZC,UAAaA,UACbC,WAAcA,YCcf,SAASC,EAAaC,EAAKC,GAC1B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,GACCN,GACAA,EAAMO,MACNC,EAAUR,EAAMS,WAEhBP,EAAOQ,EAAOV,EAAMO,OACR,CAGX,IAFAH,EAAM,IAAIF,EAAMF,EAAMS,SACtBN,EAAOQ,EAAYX,GACbM,EAAI,EAAGA,EAAIH,EAAKS,OAAQN,IAE7B,GACO,UAFPD,EAAIF,EAAMG,KAGH,YAAND,GACM,SAANA,EAHD,CAOA,GAAW,UAANA,EAAgB,CACpB,IAAMG,EAAUR,EAAMK,IACrB,SAEDJ,GAAW,EAEZG,EAAKC,GAAML,EAAOK,GAKnB,OAHMJ,GAAYO,EAAUJ,EAAIS,SAC/BT,EAAIS,MAAQ,IAENT,EAGT,OAAOJ"}